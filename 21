import java.util.Random;


public class Driver 
{
	public static void main(String[] args)
	{
		int[] arrayOfNumbers = new int[10];
		Driver.fillArrayWithRandomInts(arrayOfNumbers);
		Driver.printIntArray(arrayOfNumbers);
		Driver.mergeSort(arrayOfNumbers);
		Driver.printIntArray(arrayOfNumbers);
	}
	
	
	//Homework
	static void mergeSort(int[] ar)
	{
		Driver.mergeSortHelper(ar, 0, ar.length-1);
	}
	
	static void mergeSortHelper(int[] ar, int begin, int end)
	{
		Driver.display(ar, begin, end);
		if(begin != end)
		{
			int leftBegin = begin;
			int rightEnd = end;
			int rightBegin = ((end-begin)/2 + begin)+1;
			int leftEnd = ((end-begin)/2 + begin);
			Driver.mergeSortHelper(ar, leftBegin, leftEnd);
			Driver.mergeSortHelper(ar, rightBegin, rightEnd);
			
		
		int[] temp = new int[rightEnd -leftBegin + 1];
		int currLeft = leftBegin;
		int currRight = rightBegin;
		
		for(int tempPos = 0; tempPos < temp.length; tempPos++)
		{
			if(currLeft > leftEnd)
			{
				temp[tempPos] = ar[currRight];
				currRight++;
			}
			else if (currRight > rightEnd)
			{
				temp[tempPos] = ar[currLeft];
				currLeft++;
			}
			else
			{
				if(ar[currLeft] < ar[currRight])
				{
					temp[tempPos] = ar[currLeft];
					currLeft++;
				}
				else
				{
					temp[tempPos] = ar[currRight];
					currRight++;
				}
			}
		}
		int tempPos = 0;
		for(int i = leftBegin; i <= rightEnd; i++)
		{
			ar[i] = temp[tempPos];
			tempPos++;
		}
		}
	}
	
	static void display(int[] ar, int begin, int end)
	{
		for (int i = begin; i <= end; i++ )
		{
			System.out.print(ar[1] + "");
		}
		
			
		System.out.println("");
		
	}
	
	static void fillArrayWithRandomInts(int[] ar)
	{
		Random r = new Random();
		for(int i = 0; i < ar.length; i++)
		{
			ar[i] = r.nextInt(101);
		}
	}

static void printIntArray(int[] ar)
{
	for(int i = 0; i < ar.length; i++)
	{
		System.out.print(ar[i] + " ");
	}
	System.out.println();
}
}

	
